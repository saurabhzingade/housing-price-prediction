# -*- coding: utf-8 -*-
"""housing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1myK886rt_lJTpD23iu-IGXH8juhdGuMO
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df =pd.read_csv('/content/kc_house_data.csv')

df.isnull().sum()

df.describe().transpose()

plt.figure(figsize=(18,6))
sns.distplot(df['price'])

sns.countplot(df['bedrooms'])

df.corr()['price'].sort_values()



plt.figure(figsize=(18,6))

sns.scatterplot(df['price'],df['sqft_living'])

sns.countplot(df['bathrooms'])

df[df['bathrooms']>5]

plt.figure(figsize=(16,8))
sns.scatterplot(df['price'],df['long'])

plt.figure(figsize=(16,8))
sns.scatterplot(df['price'],df['lat'])

plt.figure(figsize=(16,8))

sns.scatterplot(x='long',y='lat',data = df,hue='price')

df.sort_values('price',ascending=False).head(20)

len(df)*.03

non_top = df.sort_values('price',ascending=False).iloc[647:]

plt.figure(figsize=(16,8))

sns.scatterplot(x='long',y='lat',data = non_top,hue='price',edgecolor=None,alpha=0.2)

df = df.drop('id',axis=1)

df['date']=pd.to_datetime(df['date'])

df['date']

df['year']=df['date'].apply(lambda date:date.year)

df['month']=df['date'].apply(lambda date:date.month)

df.head()

plt.figure(figsize=(16,8))

sns.boxplot(x='month',y='price',data=df)

df.groupby('month').mean()['price'].plot()

df.groupby('year').mean()['price'].plot()

df =df.drop('date',axis=1)

df

df['zipcode'].value_counts()

df = df.drop('zipcode',axis=1)

df['yr_renovated'].value_counts()

df['sqft_basement'].value_counts()

df.head()

X=df.drop('price',axis=1)
y=df['price']

X=X.iloc[216:].values
y=y.iloc[216:].values

X.shape

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=101)

from sklearn.preprocessing import MinMaxScaler

scaler = MinMaxScaler()

X_train = scaler.fit_transform(X_train)

X_test = scaler.transform(X_test)

X_train

from tensorflow.keras.models import Sequential

from tensorflow.keras.layers import  Dense

X_train.shape

model=Sequential()
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))
model.add(Dense(19,activation='relu'))

model.add(Dense(1))

model.compile(optimizer = 'adam',loss='mse')

model.fit(x=X_train,y=y_train,
          validation_data=(X_test,y_test),
          batch_size=128,epochs=800 )

loss=pd.DataFrame(model.history.history)

loss.plot()

from sklearn.metrics import mean_absolute_error,mean_squared_error,explained_variance_score

predictions=model.predict(X_test)

mean_squared_error(y_test,predictions)

np.sqrt(mean_squared_error(y_test,predictions))

mean_absolute_error(y_test,predictions)

df['price'].describe()

5.402966e+05

explained_variance_score(y_test,predictions)

plt.figure(figsize=(12,6))
plt.scatter(y_test,predictions)
plt.plot(y_test,y_test,'r')

single = df.drop('price',axis=1).iloc[3]

single

single=scaler.transform(single.values.reshape(-1,19))

model.predict(single)

df.head()

df.iloc[216:]

